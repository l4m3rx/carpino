music_directory		    "/x/music"
playlist_directory	    "/var/mpd/playlists"
db_file			        "/var/mpd/database"
log_file			    "/var/mpd/mpd.log"
pid_file			    "/var/mpd/pid"
state_file			    "/var/mpd/state"
sticker_file		    "/var/mpd/sticker.sql"

user				    "mpd"
group				    "mpd"

bind_to_address		    "127.0.0.1"
bind_to_address		    "/var/mpd/socket"
port				    "6600"

auto_update	            "yes"
#auto_update_depth      "3"

#metadata_to_use	    "artist,album,title,track,name,genre,date,composer,performer,disc"
#gapless_mp3_playback	"yes"

follow_inside_symlinks	"yes"
follow_outside_symlinks	"yes"
save_absolute_paths_in_playlists	"yes"

zeroconf_enabled	    "yes"
zeroconf_name		    "mpd"

connection_timeout      "60"
max_connections         "32"

max_playlist_length     "65536"
max_command_list_size   "2048"
max_output_buffer_size  "8192"

filesystem_charset      "UTF-8"
id3v1_encoding          "UTF-8"
log_level               "default"

# Permissions #################################################################
#password                        "jijibiji@read,add,control,admin"
# This setting specifies the permissions a user has who has not yet logged in. 
#default_permissions             "read,add,control,admin"

input {
        plugin "curl"
}

# Audio Output ################################################################
#
# MPD supports various audio output types, as well as playing through multiple 
# audio outputs at the same time, through multiple audio_output settings 
# blocks. Setting this block is optional, though the server will only attempt
# autodetection for one sound card.
#
# An example of an ALSA output:
#

#audio_output {
#    type	"alsa"
#    name	"My ALSA Device"
#    device	"hw:0,0"
    # mixer_type "software"
    # mixer_device "default"
    # mixer_control "PCM"
#}
#audio_output {
#	type		"alsa"
#	name		"ALSA"
#	device          "hw:1,0"       
#	device		"hw:0,0"	# optional
##	mixer_type      "hardware"	# optional
#	mixer_device	"default"	# optional
#	mixer_control	"PCM"		# optional
##	mixer_index	"0"		# optional
#}
#
# An example of an OSS output:
#
#audio_output {
#	type		"oss"
#	name		"My OSS Device"
##	device		"/dev/dsp"	# optional
##	mixer_type      "hardware"	# optional
##	mixer_device	"/dev/mixer"	# optional
##	mixer_control	"PCM"		# optional
#}
#
# An example of a shout output (for streaming to Icecast):
#
#audio_output {
#	type		"shout"
#	encoding	"ogg"			# optional
#	name		"My Shout Stream"
#	host		"localhost"
#	port		"8000"
#	mount		"/mpd.ogg"
#	password	"hackme"
#	quality		"5.0"
#	bitrate		"128"
#	format		"44100:16:1"
##	protocol	"icecast2"		# optional
##	user		"source"		# optional
##	description	"My Stream Description"	# optional
##	url		"http://example.com"	# optional
##	genre		"jazz"			# optional
##	public		"no"			# optional
##	timeout		"2"			# optional
##	mixer_type      "software"		# optional
#}
#
# An example of a recorder output:
#
#audio_output {
#	type		"recorder"
#	name		"My recorder"
#	encoder		"vorbis"		# optional, vorbis or lame
#	path		"/var/lib/mpd/recorder/mpd.ogg"
##	quality		"5.0"			# do not define if bitrate is defined
#	bitrate		"128"			# do not define if quality is defined
#	format		"44100:16:1"
#}
#
# An example of a httpd output (built-in HTTP streaming server):
#
#audio_output {
#	type		"httpd"
#	name		"My HTTP Stream"
#	encoder		"vorbis"		# optional, vorbis or lame
#	port		"8000"
#	bind_to_address	"0.0.0.0"		# optional, IPv4 or IPv6
##	quality		"5.0"			# do not define if bitrate is defined
#	bitrate		"128"			# do not define if quality is defined
#	format		"44100:16:1"
#	max_clients	"0"			# optional 0=no limit
#}
#
# An example of a pulseaudio output (streaming to a remote pulseaudio server)

audio_output {
	type		"pulse"
	name		"Pulse Output"
}
#
# An example of a winmm output (Windows multimedia API).
#
#audio_output {
#	type		"winmm"
#	name		"My WinMM output"
##	device		"Digital Audio (S/PDIF) (High Definition Audio Device)" # optional
#		or
##	device		"0"		# optional
##	mixer_type	"hardware"	# optional
#}
#
# An example of an openal output.
#
#audio_output {
#	type		"openal"
#	name		"My OpenAL output"
##	device		"Digital Audio (S/PDIF) (High Definition Audio Device)" # optional
#}
#
## Example "pipe" output:
#
#audio_output {
#	type		"pipe"
#	name		"my pipe"
#	command		"aplay -f cd 2>/dev/null"
## Or if you're want to use AudioCompress
#	command		"AudioCompress -m | aplay -f cd 2>/dev/null"
## Or to send raw PCM stream through PCM:
#	command		"nc example.org 8765"
#	format		"44100:16:2"
#}
#
## An example of a null output (for no audio output):
#
#audio_output {
#	type		"null"
#	name		"My Null Output"
#	mixer_type      "none"			# optional
#}
#
